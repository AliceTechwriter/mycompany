MODULE BarCode;

REQUIRE MasterData, Item, Product;

NAMESPACE MasterData;

CLASS BarCode 'Штрихкод';

item 'Номенклатура' = DATA Item (BarCode) NONULL DELETE;
idItem 'Код номенклатуры' (BarCode b) = id(item(b));
nameItem 'Номенклатура' (BarCode b) = name(item(b));

@defineID(barCode, 'Штрихкоды', '');
itemBarCode (STRING[50] id) = item(barCode(id));

dataDefaultBarCode = DATA BarCode (Item);
calcDefaultBarCode (Item i) = GROUP LAST BarCode b ORDER DESC b WHERE item(b) = i;

defaultBarCode (Item i) = OVERRIDE dataDefaultBarCode(i), calcDefaultBarCode(i);
default 'По умолчанию' (BarCode b) = defaultBarCode(item(b)) = b CHARWIDTH 10;

barCode (Item i) = defaultBarCode(i);

idBarCode 'Штрихкод' (Item i) = id(barCode(i)) MATERIALIZED INDEXED;

changeDefault (BarCode b) {
    INPUT c = BOOLEAN DO {
        IF c THEN
            defaultBarCode(Item i) <- b WHERE i = item(b);
    }
}

setBarCode(Item i) {
    INPUT id = STRING DO {
        IF NOT barCode(i) THEN NEW b = BarCode {
            item(b) <- i;
        }
        id(BarCode b) <- id WHERE b = barCode(i); 
    }
}

EXTEND FORM item
    PROPERTIES(i) idBarCode AFTER canonicalNameCategory(i) ON CHANGE setBarCode(i)
    
    OBJECTS b = BarCode
    PROPERTIES(b) id, default ON CHANGE changeDefault(b)
    PROPERTIES(b) NEW, DELETE
    FILTERS item(b) = i
;

DESIGN item {
    column1 {
        MOVE PROPERTY(idBarCode(i));
    }
    tabs {
        NEW barCodes {
            caption = 'Штрихкоды';
            MOVE BOX(b);        
        }
    }
}

EXTEND FORM items
    PROPERTIES(i) READONLYIF isReadonly() idBarCode AFTER name(i)
;

EXTEND FORM products
    PROPERTIES(p) idBarCode AFTER name(p)
;

consumedBarCode = DATA LOCAL BOOLEAN ();
barCode 'Штрихкод' = DATA LOCAL STRING () CHANGEKEY 'F4';

META defineBarCodeSearch(doc, let, line, itm, quantity)
    processBarCode ABSTRACT (###doc, ###doc##Line, STRING);
    scanBarCode (###doc d, ###doc##Line l) {
        INPUT id = STRING DO {
            IF itemBarCode(id) THEN {
                set###quantity(d, itemBarCode(id), quantity(d, itemBarCode(id)) (+) 1);
                SEEK ##doc.line = last###doc##Line(d, itemBarCode(id));
                ACTIVATE PROPERTY ##doc.quantity(l); 
            } ELSE {
                consumedBarCode() <- NULL;
                processBarCode(d, l, id);
                IF NOT consumedBarCode() THEN
                    MESSAGE 'Штрихкод не найден';
            }
        }
    }
    
    EXTEND FORM ##doc
        PROPERTIES() barCode DRAW l TOOLBAR ON CHANGE scanBarCode(##let, l)
    ;
END

// add barcode item form
changeBarCode (Item i) {
    INPUT s = STRING DO {
        IF s THEN {
            IF barCode(s) THEN
                MESSAGE 'Штрихкод уже присутствует в базе данных.';
            ELSE NEW b = BarCode {
                item(b) <- i;
                id(b) <- s;
            }
        } 
    }
}

EXTEND FORM item
    PROPERTIES() barCode DRAW b TOOLBAR ON CHANGE changeBarCode(i)
;

// auto create
dataAutoCreateBarCode 'Автоматически генерировать штрихкод' = DATA BOOLEAN (Category);
autoCreateBarCode (Category c) = GROUP LAST dataAutoCreateBarCode(Category cp) ORDER level(c, cp);

EXTEND FORM category
    PROPERTIES(c) dataAutoCreateBarCode
;

DESIGN category {
    params {
        MOVE PROPERTY(dataAutoCreateBarCode(c));
    }
}

WHEN SET(Item i IS Item) AND autoCreateBarCode(category(i)) AND NOT defaultBarCode(i) DO NEW b = BarCode {
    item(b) <- i;
}