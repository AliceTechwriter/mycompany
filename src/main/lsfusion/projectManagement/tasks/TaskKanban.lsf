MODULE TaskKanban;

REQUIRE Task, ProjectTask;

PRIORITY MasterData;

NAMESPACE ProjectManagement;

taskStatuses () = JSON FROM id = TaskStatus s, name(s) WHERE s IS TaskStatus;
taskEmployees () = JSON FROM id = Employee e, name(e) WHERE e IS Employee;

order = DATA INTEGER (CustomUser, Task);
currentOrder (Task t) =  order(currentUser(), t);

EXTEND FORM tasks
    OBJECTS tt = Task CUSTOM 'taskKanban'
            OPTIONS JSON FROM employees = taskEmployees(), statuses = taskStatuses()
    PROPERTIES(tt) nameProject,
                   name,
                   nameAuthor,
                   deadline,
                   status ON CHANGE {
                       INPUT l = LONG DO
                           FOR LONG(TaskStatus ts AS TaskStatus) = l DO
                               status(tt) <- ts;
                           ELSE
                               status(tt) <- NULL;
                   },
                   idColorPriority,
                   nameAssignedTo,
                   currentOrder ON CHANGE {
                       INPUT ord = INTEGER DO order(currentUser(), tt) <- ord;
                   }

    ORDERS status(tt), currentOrder(tt)
    FILTERS active(tt)

    FILTERS [FILTER tasks.t](tt)

    PROPERTIES(tt) PANEL pnameProject = nameProject, pname = name, pnamePriority = namePriority, pnameAssignedTo = nameAssignedTo, pdeadline = deadline, pdescription = description,
                         edit = EDIT, delete = DELETE
;

DESIGN tasks {
    tabbedPane {
        NEW kanban FIRST {
            caption = 'Kanban';
            MOVE GRID(tt) {
                fill = 1;
                MOVE PROPERTY(pnameProject) { alignment = STRETCH; }
                MOVE PROPERTY(pname) { alignment = STRETCH; }
                MOVE PROPERTY(pnamePriority) { alignment = STRETCH; }
                MOVE PROPERTY(pnameAssignedTo) { alignment = STRETCH; }
                MOVE PROPERTY(pdeadline) { alignment = STRETCH; }
                MOVE PROPERTY(pdescription) { alignment = STRETCH; }
                NEW panelActions {
                    horizontal = TRUE;
                    MOVE PROPERTY(edit) { fill = 1; }
                    MOVE PROPERTY(delete) { fill = 1; }
                    alignment = STRETCH;
                }
            }
            REMOVE BOX(tt);
        }
    }
}

// change interval
onWebClientLoad() + {
    INTERNAL CLIENT 'dragula.css';
    INTERNAL CLIENT 'dragula.js';
    INTERNAL CLIENT 'taskkanban.js';
    INTERNAL CLIENT 'taskkanban.css';
}